{"version":3,"sources":["actions/index.js","actions/types.js","components/Other/DatePickerClass.js","components/Other/TimePickerClass.js","selectors/selectServiceStringArray.js","components/Appt/ApptEditForm.js","components/Appt/ApptEditModal.js","components/DashBoard/DashList.js","selectors/selectApptStringToLuxonDT.js","selectors/selectApptSortedDateTimeASC.js","selectors/selectApptFutureDatesFromNow.js","components/DashBoard/DashBoard.js","components/Appt/ApptAddForm.js","components/Appt/ApptAddModal.js","components/Nav/Nav.js","components/Other/ScrollToTop.js","selectors/selectStaffSelectDetail.js","components/Staff/StaffEditForm.js","components/Staff/StaffEditModal.js","components/Staff/StaffDetail.js","components/Staff/StaffAddForm.js","components/Staff/StaffAddModal.js","components/Staff/Staff.js","components/Service/ServiceAddForm.js","components/Service/ServiceAddModal.js","selectors/selectServiceEntries.js","components/Service/Service.js","components/Settings/SettingsEditForm.js","components/Settings/SettingsEditModal.js","components/Settings/Settings.js","components/App.js","serviceWorker.js","reducers/navReducer.js","reducers/apptReducer.js","reducers/staffReducer.js","reducers/serviceReducer.js","reducers/dashReducer.js","reducers/userReducer.js","reducers/index.js","index.js"],"names":["deleteApt","id","type","payload","DatePickerClass","handleChange","event","value","props","handleDatePicker","dateFormat","name","placeholder","this","date","iconPosition","popupPosition","onChange","Component","TimePickerClass","handleTimePicker","timeFormat","time","createSelector","state","service","ServiceStringArray","Object","entries","item","mapDispatchToProps","editAptFx","data","connect","ownProps","console","log","itemId","itemData","appt","filter","staff","list","selectorServiceStringArray","useState","customer","phone","formData","setFormData","serviceOption","map","key","text","staffOption","staffName","handleFormInputData","e","target","Form","onSubmit","preventDefault","ModalClose","handleSubmit","Field","required","Dropdown","fluid","search","selection","options","result","handleDropDownDataStaff","handleDropDownDataService","Container","textAlign","Button","color","onClick","positive","ApptEditModal","modalOpenStatus","setModalOpenStatus","Modal","closeIcon","onClose","open","trigger","className","Icon","Header","Content","Description","deleteAptFx","apptMap","sortedByDates","index","Table","Row","Cell","toLocaleString","month","day","DateTime","TIME_SIMPLE","icon","as","title","titleDates","celled","striped","selectable","HeaderCell","width","Body","apptState","dateDT","fromFormat","timeDT","DT","toISO","dateTime","sort","a","b","Date","todayDate","local","sortedData","hasSame","dashBoard","HeaderLink","margin","backgroundColor","marginBottom","viewDashFx","stringToLuxonDT","selectApptStringToLuxonDT","sortedByDatesASC","selectApptSortedDateTimeASC","futureDateFromNow","selectApptFutureDatesFromNow","todayDT","apptTodayOnly","tomorrowDT","plus","days","apptTomorrowOnly","weekDT","weeks","apptWeekOnly","Interval","fromDateTimes","contains","monthDT","months","apptMonthOnly","dTToLocalString","weekday","dashView","dash","view","todayDTString","tomorrowDTString","weekDTString","monthDTString","renderComponent","DashList","Grid","stackable","columns","divided","style","Column","Item","basic","submitAptFx","uid","addModal","borderRight","padding","display","alignItems","justifyContent","AddModal","content","size","topBar","zIndex","position","sideBar","height","NavBarItem","ItemMarginTop","fontSize","paddingTop","paddingBottom","navBarSelectedFx","navBarSelect","nav","activeItem","menuItemMap","link","Menu","active","Link","to","replace","str","toUpperCase","borderless","toLocaleUpperCase","ApptAddModal","pointing","Sidebar","animation","direction","vertical","visible","ScrollToTop","prevProps","location","pathname","window","scrollTo","children","withRouter","staffSelect","staffListValue","staffSelectValue","editStaffFx","staffSelectDetail","selectStaffSelectDetail","SelectorServiceStringArray","workDay","staffId","workDayChecked","d","checked","workDayMap","includes","List","Checkbox","label","defaultChecked","serviceChecked","serviceMap","StaffModal","compact","StaffEditForm","selectedStaff","StaffSelectAppt","scheduleMap","Card","StaffEditModal","addStaffFx","StaffAddModal","primary","StaffAddForm","container","paddingLeft","paddingRight","staffSelectedFx","staffMap","mobile","tablet","computer","largeScreen","widescreen","verticalAlign","relaxed","addServiceFx","serviceName","categoryName","categoryOption","keys","maxWidth","serviceData","selectServiceEntries","item2","ServiceAddModal","editUserFx","firstName","userData","lastName","email","address","description","rows","settings","align","checkbox","user","role","joinDate","toggle","SettingsEditModal","appStyle","marginLeft","App","exact","path","render","Boolean","hostname","match","INITIAL_STATE","initialState","category1","category2","category3","emailSub","textNot","visibility","autoSave","autoReply","vacation","combineReducers","editRemoved","AddArray","InsertEditedStaff","itemArrayAdd","ReactDOM","store","createStore","reducers","composeWithDevTools","applyMiddleware","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d2315dfc.chunk.js","sourcesContent":["import {\r\n  NAVBAR_SELECT,\r\n  DELETE_APT,\r\n  SUBMIT_APT,\r\n  EDIT_APT,\r\n  STAFF_SELECT,\r\n  ADD_STAFF,\r\n  EDIT_STAFF,\r\n  ADD_SERVICE,\r\n  VIEW_DASH,\r\n  EDIT_USER\r\n} from \"./types\";\r\n\r\nexport const navBarSelected = name => ({\r\n  type: NAVBAR_SELECT,\r\n  payload: name\r\n});\r\n\r\nexport const staffSelected = name => ({\r\n  type: STAFF_SELECT,\r\n  payload: name\r\n});\r\nexport const deleteApt = id => ({\r\n  type: DELETE_APT,\r\n  payload: id\r\n});\r\n\r\nexport const submitApt = data => ({\r\n  type: SUBMIT_APT,\r\n  payload: data\r\n});\r\nexport const editApt = data => ({\r\n  type: EDIT_APT,\r\n  payload: data\r\n});\r\n\r\nexport const addStaff = data => ({\r\n  type: ADD_STAFF,\r\n  payload: data\r\n});\r\n\r\nexport const editStaff = data => ({\r\n  type: EDIT_STAFF,\r\n  payload: data\r\n});\r\n\r\nexport const addService = data => ({\r\n  type: ADD_SERVICE,\r\n  payload: data\r\n});\r\n\r\nexport const viewDash = data => ({\r\n  type: VIEW_DASH,\r\n  payload: data\r\n});\r\n\r\nexport const editUser = data => ({\r\n  type: EDIT_USER,\r\n  payload: data\r\n});\r\n","// navReducer\r\nexport const NAVBAR_SELECT = \"NAVBAR_SELECT\";\r\n\r\n// apptReducer\r\nexport const DELETE_APT = \"DELETE_APT\";\r\nexport const EDIT_APT = \"EDIT_APT\";\r\nexport const SUBMIT_APT = \"SUBMIT_APT\";\r\n\r\n// staffReducer\r\nexport const STAFF_SELECT = \"STAFF_SELECT\";\r\nexport const ADD_STAFF = \"ADD_STAFF\";\r\nexport const EDIT_STAFF = \"EDIT_STAFF\";\r\n\r\n// serviceReducer\r\nexport const ADD_SERVICE = \"ADD_SERVICE\";\r\n\r\n// dashReducer\r\nexport const VIEW_DASH = \"VIEW_DASH\";\r\n\r\n//\r\nexport const EDIT_USER = \"EDIT_USER\";\r\n","import React, { Component } from \"react\";\r\nimport { DateInput } from \"semantic-ui-calendar-react\";\r\n\r\nexport default class DatePickerClass extends Component {\r\n  handleChange = (event, { value }) => {\r\n    this.props.handleDatePicker(value);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <DateInput\r\n        dateFormat=\"MM-DD-YYYY\"\r\n        name=\"date\"\r\n        placeholder=\"Date\"\r\n        value={this.props.date}\r\n        iconPosition=\"left\"\r\n        popupPosition=\"bottom right\"\r\n        onChange={this.handleChange}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { TimeInput } from \"semantic-ui-calendar-react\";\r\n\r\nexport default class TimePickerClass extends Component {\r\n  handleChange = (event, { value }) => {\r\n    this.props.handleTimePicker(value);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <TimeInput\r\n        timeFormat=\"AMPM\"\r\n        name=\"time\"\r\n        placeholder=\"Time\"\r\n        value={this.props.time}\r\n        iconPosition=\"left\"\r\n        popupPosition=\"bottom right\"\r\n        onChange={this.handleChange}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import { createSelector } from \"reselect\";\r\n\r\nconst serviceDataSelector = state => state.service;\r\n\r\nconst getServiceStringArray = state => {\r\n  const serviceArrayEntries = Object.entries(state);\r\n  let ServiceStringArray = [];\r\n  for (let item of serviceArrayEntries) {\r\n    ServiceStringArray = [...ServiceStringArray, ...item[1]];\r\n  }\r\n  return ServiceStringArray;\r\n};\r\n\r\nexport default createSelector(serviceDataSelector, getServiceStringArray);\r\n","import React, { useState } from \"react\";\r\nimport { Button, Dropdown, Form, Container } from \"semantic-ui-react\";\r\nimport { connect } from \"react-redux\";\r\nimport { editApt } from \"../../actions/index\";\r\nimport DatePickerClass from \"../Other/DatePickerClass\";\r\nimport TimePickerClass from \"../Other/TimePickerClass\";\r\nimport selectorServiceStringArray from \"../../selectors/selectServiceStringArray\";\r\n\r\nconst ApptEditForm = props => {\r\n  const [formData, setFormData] = useState({\r\n    id: props.itemData.id,\r\n    time: props.itemData.time,\r\n    staff: props.itemData.staff,\r\n    service: props.itemData.service,\r\n    customer: props.itemData.customer,\r\n    phone: props.itemData.phone,\r\n    date: props.itemData.date\r\n  });\r\n\r\n  const serviceOption = props.ServiceStringArray.map(item => {\r\n    return {\r\n      key: item,\r\n      text: item,\r\n      value: item\r\n    };\r\n  });\r\n  const staffOption = props.staff.map(item => {\r\n    return {\r\n      key: item.staffName,\r\n      text: item.staffName,\r\n      value: item.staffName\r\n    };\r\n  });\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    props.ModalClose();\r\n    props.editAptFx(formData);\r\n  };\r\n\r\n  const handleFormInputData = e => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  const handleDatePicker = value => {\r\n    setFormData({\r\n      ...formData,\r\n      date: value\r\n    });\r\n  };\r\n\r\n  const handleTimePicker = value => {\r\n    setFormData({\r\n      ...formData,\r\n      time: value\r\n    });\r\n  };\r\n\r\n  const handleDropDownDataStaff = result => {\r\n    setFormData({\r\n      ...formData,\r\n      staff: result\r\n    });\r\n  };\r\n\r\n  const handleDropDownDataService = result => {\r\n    setFormData({\r\n      ...formData,\r\n      service: result\r\n    });\r\n  };\r\n\r\n  //****testing\r\n  console.log(\"props.itemData\", props.itemData);\r\n  return (\r\n    <Form onSubmit={e => handleSubmit(e)}>\r\n      <Form.Field>\r\n        <label>Customer Name</label>\r\n        <input\r\n          name=\"customer\"\r\n          required\r\n          placeholder=\"Customer\"\r\n          value={formData.customer}\r\n          onChange={e => handleFormInputData(e)}\r\n        />\r\n      </Form.Field>\r\n      <Form.Field>\r\n        <label>Staff</label>\r\n        <Dropdown\r\n          placeholder=\"Select Staff\"\r\n          fluid\r\n          search\r\n          selection\r\n          value={formData.staff}\r\n          options={staffOption}\r\n          onChange={(e, result) => handleDropDownDataStaff(result.value)}\r\n        />\r\n      </Form.Field>\r\n      <Form.Field>\r\n        <label>Service</label>\r\n        <Dropdown\r\n          placeholder=\"Select Service\"\r\n          fluid\r\n          search\r\n          selection\r\n          value={formData.service}\r\n          options={serviceOption}\r\n          onChange={(e, result) => handleDropDownDataService(result.value)}\r\n        />\r\n      </Form.Field>\r\n      <Form.Field>\r\n        <label>Date</label>\r\n\r\n        <DatePickerClass\r\n          handleDatePicker={handleDatePicker}\r\n          date={formData.date}\r\n        />\r\n      </Form.Field>\r\n      <Form.Field>\r\n        <label>Time</label>\r\n        <TimePickerClass\r\n          handleTimePicker={handleTimePicker}\r\n          time={formData.time}\r\n        />\r\n      </Form.Field>\r\n      <Form.Field>\r\n        <label>Phone Number</label>\r\n        <input\r\n          placeholder=\"Phone Number\"\r\n          name=\"phone\"\r\n          required\r\n          type=\"tel\"\r\n          value={formData.phone}\r\n          onChange={e => handleFormInputData(e)}\r\n        />\r\n      </Form.Field>\r\n      <Container textAlign=\"center\">\r\n        <Button color=\"blue\" onClick={props.ModalClose}>\r\n          Cancel\r\n        </Button>\r\n        <Button positive type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Container>\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst mapStateTopProps = (state, ownProps) => {\r\n  //****testing\r\n  console.log(\"  ownProps.itemId\", ownProps.itemId);\r\n\r\n  const itemData = state.appt.filter(item => {\r\n    return item.id === ownProps.itemId;\r\n  });\r\n\r\n  return {\r\n    itemData: itemData[0],\r\n    staff: state.staff.list,\r\n    ServiceStringArray: selectorServiceStringArray(state)\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  editAptFx: editApt\r\n};\r\n\r\nexport default connect(mapStateTopProps, mapDispatchToProps)(ApptEditForm);\r\n","import React, { useState } from \"react\";\r\nimport { Modal, Icon } from \"semantic-ui-react\";\r\nimport ApptEditForm from \"./ApptEditForm\";\r\n\r\nconst ApptEditModal = props => {\r\n  const [modalOpenStatus, setModalOpenStatus] = useState(false);\r\n\r\n  const ModalClose = () => {\r\n    setModalOpenStatus(false);\r\n  };\r\n  const ModalOpen = () => {\r\n    setModalOpenStatus(true);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      closeIcon\r\n      onClose={ModalClose}\r\n      open={modalOpenStatus}\r\n      trigger={\r\n        <div onClick={ModalOpen} className=\"pointer w-100 h-100\">\r\n          <Icon name=\"edit outline\" />\r\n        </div>\r\n      }\r\n    >\r\n      <Modal.Header>Edit Appointment</Modal.Header>\r\n      <Modal.Content>\r\n        <Modal.Description>\r\n          <ApptEditForm ModalClose={ModalClose} itemId={props.itemId} />\r\n        </Modal.Description>\r\n      </Modal.Content>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ApptEditModal;\r\n","import React from \"react\";\r\nimport { Header, Table } from \"semantic-ui-react\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteApt } from \"../../actions/index\";\r\nimport ApptEditModal from \"../Appt/ApptEditModal\";\r\nimport { DateTime } from \"luxon\";\r\n\r\nconst Today = props => {\r\n  const apptMap = props.sortedByDates.map((item, index) => {\r\n    return (\r\n      <Table.Row key={index}>\r\n        <Table.Cell>\r\n          {item.date.toLocaleString({ month: \"numeric\", day: \"numeric\" })}\r\n        </Table.Cell>\r\n        <Table.Cell>\r\n          {item.time.toLocaleString(DateTime.TIME_SIMPLE)}\r\n        </Table.Cell>\r\n        <Table.Cell>{item.staff} </Table.Cell>\r\n        <Table.Cell>{item.service}</Table.Cell>\r\n        <Table.Cell>{item.customer}</Table.Cell>\r\n        <Table.Cell>{item.phone}</Table.Cell>\r\n        <Table.Cell\r\n          textAlign=\"center\"\r\n          icon=\"delete\"\r\n          className=\"pointer p-0\"\r\n          onClick={() => props.deleteAptFx(item.id)}\r\n        />\r\n        <Table.Cell textAlign=\"center\" className=\"pointer p-0\">\r\n          <ApptEditModal itemId={item.id} />\r\n        </Table.Cell>\r\n      </Table.Row>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Header as=\"h3\">\r\n        {props.title}\r\n        {props.titleDates}\r\n      </Header>\r\n      <Table celled striped selectable>\r\n        <Table.Header>\r\n          <Table.Row>\r\n            <Table.HeaderCell>Date</Table.HeaderCell>\r\n            <Table.HeaderCell>Time</Table.HeaderCell>\r\n            <Table.HeaderCell>Staff</Table.HeaderCell>\r\n            <Table.HeaderCell>Service</Table.HeaderCell>\r\n            <Table.HeaderCell>Customer</Table.HeaderCell>\r\n            <Table.HeaderCell>Phone</Table.HeaderCell>\r\n            <Table.HeaderCell textAlign=\"center\" width={1}>\r\n              Delete\r\n            </Table.HeaderCell>\r\n            <Table.HeaderCell textAlign=\"center\" width={1}>\r\n              Edit\r\n            </Table.HeaderCell>\r\n          </Table.Row>\r\n        </Table.Header>\r\n\r\n        <Table.Body>{apptMap}</Table.Body>\r\n      </Table>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    // appt: state.appt\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  deleteAptFx: deleteApt\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Today);\r\n","import { createSelector } from \"reselect\";\r\nimport { DateTime } from \"luxon\";\r\n\r\nconst apptState = state => state.appt;\r\n\r\nconst getApptStringToLuxonDT = apptState => {\r\n  return apptState.map(item => {\r\n    const dateDT = DateTime.fromFormat(item.date, \"MM-dd-yyyy\");\r\n    const timeDT = DateTime.fromFormat(item.time, \"t\");\r\n    const DT = DateTime.fromFormat(\r\n      `${item.date} ${item.time}`,\r\n      \"MM-dd-yyyy t\"\r\n    ).toISO();\r\n    return {\r\n      ...item,\r\n      date: dateDT,\r\n      time: timeDT,\r\n      dateTime: DT\r\n    };\r\n  });\r\n};\r\n\r\nexport default createSelector(apptState, getApptStringToLuxonDT);\r\n","import { createSelector } from \"reselect\";\r\n\r\nconst sortData = state => state;\r\n\r\nconst getSortedByDateTimeASC = state =>\r\n  [...state].sort((a, b) => {\r\n    let aDate = new Date(a.dateTime);\r\n    let bDate = new Date(b.dateTime);\r\n    return aDate - bDate;\r\n  });\r\n\r\nexport default createSelector(sortData, getSortedByDateTimeASC);\r\n","import { createSelector } from \"reselect\";\r\nimport { DateTime } from \"luxon\";\r\n\r\nconst todayDate = DateTime.local();\r\nconst sortedData = state => state;\r\n\r\nconst getFutureDateFromNow = sortedData =>\r\n  sortedData.filter(item => {\r\n    //****testing\r\n    console.log(\"futuredates\");\r\n    return item.date > todayDate || item.date.hasSame(todayDate, \"day\");\r\n  });\r\n\r\nexport default createSelector(sortedData, getFutureDateFromNow);\r\n","import React from \"react\";\r\nimport { Container, Grid, Item } from \"semantic-ui-react\";\r\nimport DashList from \"./DashList\";\r\nimport { connect } from \"react-redux\";\r\nimport { DateTime, Interval } from \"luxon\";\r\nimport { viewDash } from \"./../../actions/index\";\r\nimport selectApptStringToLuxonDT from \"../../selectors/selectApptStringToLuxonDT\";\r\nimport selectApptSortedDateTimeASC from \"../../selectors/selectApptSortedDateTimeASC\";\r\nimport selectApptFutureDatesFromNow from \"../../selectors/selectApptFutureDatesFromNow\";\r\n\r\nconst dashBoard = {\r\n  HeaderLink: {\r\n    margin: \"1rem\",\r\n    backgroundColor: \"whitesmoke\"\r\n  },\r\n  Content: {\r\n    margin: \"1rem\"\r\n  },\r\n  Header: {\r\n    marginBottom: 0\r\n  }\r\n};\r\n\r\nconst DashBoard = props => {\r\n  let renderComponent;\r\n\r\n  let switchKey = props.dashView;\r\n\r\n  switch (switchKey) {\r\n    case \"today\":\r\n      renderComponent = (\r\n        <DashList\r\n          sortedByDates={props.apptTodayOnly}\r\n          titleDates={props.todayDTString}\r\n          title=\"Today: \"\r\n        />\r\n      );\r\n      break;\r\n    case \"tomorrow\":\r\n      renderComponent = (\r\n        <DashList\r\n          sortedByDates={props.apptTomorrowOnly}\r\n          titleDates={props.tomorrowDTString}\r\n          title=\"Tomorrow: \"\r\n        />\r\n      );\r\n\r\n      break;\r\n    case \"week\":\r\n      renderComponent = (\r\n        <DashList\r\n          sortedByDates={props.apptWeekOnly}\r\n          titleDates={`${props.todayDTString} -  ${props.weekDTString}`}\r\n          title=\"Week: \"\r\n        />\r\n      );\r\n\r\n      break;\r\n    case \"month\":\r\n      renderComponent = (\r\n        <DashList\r\n          sortedByDates={props.apptMonthOnly}\r\n          titleDates={`${props.todayDTString}  -  ${props.monthDTString}`}\r\n          title=\"Month: \"\r\n        />\r\n      );\r\n\r\n      break;\r\n    default:\r\n      renderComponent = (\r\n        <DashList sortedByDates={props.sortedByDatesASC} title=\"ALL\" />\r\n      );\r\n      break;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Grid stackable columns={12} divided>\r\n        <Grid.Row style={dashBoard.HeaderLink}>\r\n          <Grid.Column textAlign=\"center\" width={3}>\r\n            <Item.Content>\r\n              <Item.Header\r\n                as=\"h1\"\r\n                style={dashBoard.Header}\r\n                onClick={() => props.viewDashFx(\"today\")}\r\n                className=\"hover\"\r\n              >\r\n                Today\r\n              </Item.Header>\r\n            </Item.Content>\r\n          </Grid.Column>\r\n          <Grid.Column textAlign=\"center\" width={4}>\r\n            <Item.Content>\r\n              <Item.Header\r\n                as=\"h1\"\r\n                style={dashBoard.Header}\r\n                onClick={() => props.viewDashFx(\"tomorrow\")}\r\n                className=\"hover\"\r\n              >\r\n                Tomorrow\r\n              </Item.Header>\r\n            </Item.Content>\r\n          </Grid.Column>\r\n          <Grid.Column textAlign=\"center\" width={4}>\r\n            <Item.Content>\r\n              <Item.Header\r\n                as=\"h1\"\r\n                style={dashBoard.Header}\r\n                onClick={() => props.viewDashFx(\"week\")}\r\n                className=\"hover\"\r\n              >\r\n                Week\r\n              </Item.Header>\r\n            </Item.Content>\r\n          </Grid.Column>\r\n          <Grid.Column textAlign=\"center\" width={4}>\r\n            <Item.Content>\r\n              <Item.Header\r\n                as=\"h1\"\r\n                style={dashBoard.Header}\r\n                onClick={() => props.viewDashFx(\"month\")}\r\n                className=\"hover\"\r\n              >\r\n                Month\r\n              </Item.Header>\r\n            </Item.Content>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n\r\n        <Grid.Row style={dashBoard.Content}>\r\n          <Container basic=\"true\">{renderComponent}</Container>\r\n        </Grid.Row>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  const todayDate = DateTime.local();\r\n\r\n  const stringToLuxonDT = selectApptStringToLuxonDT(state);\r\n\r\n  const sortedByDatesASC = selectApptSortedDateTimeASC(stringToLuxonDT);\r\n  const futureDateFromNow = selectApptFutureDatesFromNow(sortedByDatesASC);\r\n  //****testing\r\n  console.log(\"futureDateFromNow\", futureDateFromNow);\r\n  //////////////////// select date specific data\r\n\r\n  const todayDT = DateTime.local();\r\n  const apptTodayOnly = sortedByDatesASC.filter(item => {\r\n    return item.date.hasSame(todayDate, \"day\");\r\n  });\r\n\r\n  const tomorrowDT = todayDate.plus({ days: 1 });\r\n\r\n  const apptTomorrowOnly = sortedByDatesASC.filter(item => {\r\n    return item.date.hasSame(tomorrowDT, \"day\");\r\n  });\r\n\r\n  const weekDT = todayDate.plus({ weeks: 1 });\r\n  const apptWeekOnly = sortedByDatesASC.filter(item => {\r\n    return Interval.fromDateTimes(todayDate, weekDT).contains(item.date);\r\n  });\r\n\r\n  const monthDT = todayDate.plus({ months: 1 });\r\n  const apptMonthOnly = sortedByDatesASC.filter(item => {\r\n    return Interval.fromDateTimes(todayDate, monthDT).contains(item.date);\r\n  });\r\n\r\n  const dTToLocalString = DT =>\r\n    DT.toLocaleString({\r\n      weekday: \"short\",\r\n      month: \"short\",\r\n      day: \"numeric\"\r\n    });\r\n  //****testing\r\n  console.log(\"apptMonthOnly\", apptMonthOnly);\r\n\r\n  return {\r\n    futureDateFromNow,\r\n    sortedByDatesASC,\r\n    dashView: state.dash.view,\r\n    todayDTString: dTToLocalString(todayDT),\r\n    apptTodayOnly,\r\n    apptTomorrowOnly,\r\n    tomorrowDTString: dTToLocalString(tomorrowDT),\r\n    apptWeekOnly,\r\n    weekDTString: dTToLocalString(weekDT),\r\n    apptMonthOnly,\r\n    monthDTString: dTToLocalString(monthDT)\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = { viewDashFx: viewDash };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DashBoard);\r\n","import React, { useState } from \"react\";\r\nimport { Button, Dropdown, Form, Container } from \"semantic-ui-react\";\r\nimport { connect } from \"react-redux\";\r\nimport uid from \"uid\";\r\nimport { submitApt } from \"../../actions/index\";\r\nimport DatePickerClass from \"../Other/DatePickerClass\";\r\nimport TimePickerClass from \"../Other/TimePickerClass\";\r\nimport selectorServiceStringArray from \"../../selectors/selectServiceStringArray\";\r\n\r\nconst AddForm = props => {\r\n  const [formData, setFormData] = useState({\r\n    id: uid(),\r\n    time: \"\",\r\n    staff: \"\",\r\n    service: \"\",\r\n    customer: \"\",\r\n    phone: \"\",\r\n    date: \"\"\r\n  });\r\n\r\n  const serviceOption = props.ServiceStringArray.map(item => {\r\n    return {\r\n      key: item,\r\n      text: item,\r\n      value: item\r\n    };\r\n  });\r\n\r\n  const staffOption = props.staff.map(item => {\r\n    return {\r\n      key: item.staffName,\r\n      text: item.staffName,\r\n      value: item.staffName\r\n    };\r\n  });\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    props.ModalClose();\r\n    props.submitAptFx([formData]);\r\n  };\r\n\r\n  const handleFormInputData = e => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  const handleDatePicker = value => {\r\n    setFormData({\r\n      ...formData,\r\n      date: value\r\n    });\r\n  };\r\n  const handleTimePicker = value => {\r\n    setFormData({\r\n      ...formData,\r\n      time: value\r\n    });\r\n  };\r\n\r\n  const handleDropDownDataStaff = result => {\r\n    setFormData({\r\n      ...formData,\r\n      staff: result\r\n    });\r\n  };\r\n\r\n  const handleDropDownDataService = result => {\r\n    setFormData({\r\n      ...formData,\r\n      service: result\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={e => handleSubmit(e)}>\r\n      <Form.Field>\r\n        <label>Customer Name</label>\r\n        <input\r\n          name=\"customer\"\r\n          required\r\n          placeholder=\"Customer\"\r\n          value={formData.customer}\r\n          onChange={e => handleFormInputData(e)}\r\n        />\r\n      </Form.Field>\r\n      <Form.Field>\r\n        <label>Staff</label>\r\n        <Dropdown\r\n          placeholder=\"Select Staff\"\r\n          fluid\r\n          search\r\n          selection\r\n          value={formData.staff}\r\n          options={staffOption}\r\n          onChange={(e, result) => handleDropDownDataStaff(result.value)}\r\n        />\r\n      </Form.Field>\r\n      <Form.Field>\r\n        <label>Service</label>\r\n        <Dropdown\r\n          placeholder=\"Select Service\"\r\n          fluid\r\n          search\r\n          selection\r\n          value={formData.service}\r\n          options={serviceOption}\r\n          onChange={(e, result) => handleDropDownDataService(result.value)}\r\n        />\r\n      </Form.Field>\r\n      <Form.Field>\r\n        <label>Date</label>\r\n\r\n        <DatePickerClass\r\n          handleDatePicker={handleDatePicker}\r\n          date={formData.date}\r\n        />\r\n      </Form.Field>\r\n      <Form.Field>\r\n        <label>Time</label>\r\n        <TimePickerClass\r\n          handleTimePicker={handleTimePicker}\r\n          time={formData.time}\r\n        />\r\n      </Form.Field>\r\n      <Form.Field>\r\n        <label>Phone Number</label>\r\n        <input\r\n          placeholder=\"Phone Number\"\r\n          name=\"phone\"\r\n          required\r\n          type=\"tel\"\r\n          value={formData.phone}\r\n          onChange={e => handleFormInputData(e)}\r\n        />\r\n      </Form.Field>\r\n      <Container textAlign=\"center\">\r\n        <Button color=\"blue\" onClick={props.ModalClose}>\r\n          Cancel\r\n        </Button>\r\n        <Button positive type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Container>\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst mapStateTopProps = state => {\r\n  //****testing\r\n  console.log(\"mapStateToProps rendering\");\r\n  return {\r\n    staff: state.staff.list,\r\n    ServiceStringArray: selectorServiceStringArray(state)\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  submitAptFx: submitApt\r\n};\r\n\r\nexport default connect(mapStateTopProps, mapDispatchToProps)(AddForm);\r\n","import React, { useState } from \"react\";\r\nimport { Button, Modal } from \"semantic-ui-react\";\r\nimport AddForm from \"./ApptAddForm\";\r\nconst addModal = {\r\n  Button: {\r\n    borderRight: \"1px solid rgba(34,36,38,.15)\",\r\n    width: 120,\r\n    padding: 7,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\"\r\n  }\r\n};\r\n\r\nconst AddModal = props => {\r\n  const [modalOpenStatus, setModalOpenStatus] = useState(false);\r\n\r\n  const ModalClose = () => {\r\n    setModalOpenStatus(false);\r\n  };\r\n  const ModalOpen = () => {\r\n    setModalOpenStatus(true);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      closeIcon\r\n      onClose={ModalClose}\r\n      open={modalOpenStatus}\r\n      trigger={\r\n        <Button\r\n          style={addModal.Button}\r\n          content=\"ADD APPT\"\r\n          basic\r\n          color=\"green\"\r\n          icon=\"plus\"\r\n          size=\"mini\"\r\n          onClick={ModalOpen}\r\n        />\r\n      }\r\n    >\r\n      <Modal.Header>Add New Appointment</Modal.Header>\r\n      <Modal.Content>\r\n        <Modal.Description>\r\n          <AddForm ModalClose={ModalClose} />\r\n        </Modal.Description>\r\n      </Modal.Content>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddModal;\r\n","import React from \"react\";\r\nimport { Menu, Icon, Dropdown, Sidebar } from \"semantic-ui-react\";\r\nimport { connect } from \"react-redux\";\r\nimport { navBarSelected } from \"../../actions/index\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ApptAddModal from \"../Appt/ApptAddModal\";\r\n\r\nconst style = {\r\n  topBar: {\r\n    marginBottom: 0,\r\n    zIndex: 102,\r\n    position: \"relative\"\r\n  },\r\n  sideBar: {\r\n    width: 90,\r\n    height: \"100%\",\r\n    zIndex: 0\r\n  },\r\n  Item: {\r\n    padding: 7\r\n  },\r\n  NavBarItem: {\r\n    borderRight: \"1px solid rgba(34,36,38,.15)\",\r\n    width: 89,\r\n    padding: 7,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\"\r\n  },\r\n  ItemMarginTop: {\r\n    height: 50\r\n  },\r\n  Button: {\r\n    fontSize: \"1rem\",\r\n    paddingTop: \"0.5rem\",\r\n    paddingBottom: \"0.5rem\"\r\n  }\r\n};\r\n\r\nconst Nav = props => {\r\n  const activeItem = props.navBarSelect;\r\n  const menuItemList = [\r\n    { name: \"dashboard\", icon: \"home\", link: \"/\" },\r\n    { name: \"staff\", icon: \"users\", link: \"/staff\" },\r\n    { name: \"service\", icon: \"book\", link: \"/service\" },\r\n    { name: \"settings\", icon: \"settings\", link: \"/settings\" }\r\n  ];\r\n\r\n  //mapping the menuItem list\r\n  const menuItemMap = menuItemList.map(item => {\r\n    return (\r\n      <Menu.Item\r\n        key={item.name}\r\n        active={activeItem === item.name}\r\n        as={Link}\r\n        to={item.link}\r\n        style={style.Item}\r\n        onClick={() => props.navBarSelectedFx(item.name)}\r\n      >\r\n        <Icon name={item.icon} />\r\n        {item.name.replace(/^./, str => str.toUpperCase())}\r\n      </Menu.Item>\r\n    );\r\n  });\r\n\r\n  const VerticalSidebar = () => (\r\n    <Sidebar\r\n      as={Menu}\r\n      animation=\"push\"\r\n      direction=\"left\"\r\n      icon=\"labeled\"\r\n      vertical\r\n      visible={true}\r\n      width=\"very thin\"\r\n      style={style.sideBar}\r\n    >\r\n      {/* place holder box */}\r\n      <Menu.Item as=\"a\" style={style.ItemMarginTop}></Menu.Item>\r\n\r\n      {/* this is the mapped element of left sided nav bar */}\r\n      {menuItemMap}\r\n    </Sidebar>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Menu size=\"huge\" borderless style={style.topBar}>\r\n        <Menu.Menu position=\"left\">\r\n          <Menu.Item as=\"div\" style={style.NavBarItem}></Menu.Item>\r\n          <Menu.Item as=\"div\" style={style.title}>\r\n            {props.navBarSelect.toLocaleUpperCase()}\r\n          </Menu.Item>\r\n        </Menu.Menu>\r\n        <Menu.Menu position=\"right\">\r\n          <Menu.Item as=\"div\" style={style.Button}>\r\n            <ApptAddModal />\r\n          </Menu.Item>\r\n\r\n          <Dropdown\r\n            item\r\n            pointing\r\n            text=\"JohnSmith &nbsp; &nbsp;\"\r\n            icon=\"user outline\"\r\n          >\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item>LogOut</Dropdown.Item>\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </Menu.Menu>\r\n      </Menu>\r\n\r\n      <VerticalSidebar />\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateTopProps = state => {\r\n  return {\r\n    navBarSelect: state.nav.navBarSelect\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  navBarSelectedFx: navBarSelected\r\n};\r\n\r\nexport default connect(mapStateTopProps, mapDispatchToProps)(Nav);\r\n","import { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass ScrollToTop extends Component {\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.location.pathname !== prevProps.location.pathname) {\r\n      window.scrollTo(0, 0);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default withRouter(ScrollToTop);\r\n","import { createSelector } from \"reselect\";\r\n\r\nconst staffSelectValue = state => state.staff.staffSelect;\r\nconst staffListValue = state => state.staff.list;\r\n\r\nconst getStaffSelectDetail = (staffListValue, staffSelectValue) => {\r\n  return staffListValue.filter(item => {\r\n    return item.staffName === staffSelectValue;\r\n  });\r\n};\r\n\r\nexport default createSelector(\r\n  staffListValue,\r\n  staffSelectValue,\r\n  getStaffSelectDetail\r\n);\r\n","import React, { useState } from \"react\";\r\nimport { Button, Checkbox, Form, Container, List } from \"semantic-ui-react\";\r\nimport { connect } from \"react-redux\";\r\nimport { editStaff } from \"../../actions/index\";\r\nimport SelectorServiceStringArray from \"./../../selectors/selectServiceStringArray\";\r\nimport selectStaffSelectDetail from \"../../selectors/selectStaffSelectDetail\";\r\n\r\nconst StaffForm = props => {\r\n  const [formData, setFormData] = useState({\r\n    staffName: props.staffSelectDetail.staffName,\r\n    workDay: props.staffSelectDetail.workDay,\r\n    service: props.staffSelectDetail.service,\r\n    staffId: props.staffSelectDetail.staffId\r\n  });\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    props.ModalClose();\r\n    props.editStaffFx(formData);\r\n  };\r\n\r\n  const handleFormInputData = e => {\r\n    setFormData({\r\n      ...formData,\r\n      staffName: e.target.value\r\n    });\r\n  };\r\n\r\n  // workday...............\r\n  const workDayChecked = (e, d) => {\r\n    if (d.checked) {\r\n      setFormData({ ...formData, workDay: [...formData.workDay, d.name] });\r\n    } else {\r\n      setFormData({\r\n        ...formData,\r\n        workDay: formData.workDay.filter(item => item !== d.name)\r\n      });\r\n    }\r\n  };\r\n\r\n  const WorkDayStringArray = [\r\n    \"Monday\",\r\n    \"Tuesday\",\r\n    \"Wednesday\",\r\n    \"Thursday\",\r\n    \"Friday\",\r\n    \"Saturday\"\r\n  ];\r\n\r\n  const workDayMap = WorkDayStringArray.map(item => {\r\n    if (formData.workDay.includes(item)) {\r\n      return (\r\n        <List.Item key={item}>\r\n          <Checkbox\r\n            name={item}\r\n            label={item}\r\n            onChange={(e, d) => workDayChecked(e, d)}\r\n            defaultChecked\r\n          />\r\n        </List.Item>\r\n      );\r\n    } else {\r\n      return (\r\n        <List.Item key={item}>\r\n          <Checkbox\r\n            name={item}\r\n            label={item}\r\n            onChange={(e, d) => workDayChecked(e, d)}\r\n          />\r\n        </List.Item>\r\n      );\r\n    }\r\n  });\r\n\r\n  // services...............\r\n  const serviceChecked = (e, d) => {\r\n    if (d.checked) {\r\n      setFormData({ ...formData, service: [...formData.service, d.name] });\r\n    } else {\r\n      setFormData({\r\n        ...formData,\r\n        service: formData.service.filter(item => item !== d.name)\r\n      });\r\n    }\r\n  };\r\n\r\n  const serviceMap = props.ServiceStringArray.map(item => {\r\n    if (formData.service.includes(item)) {\r\n      return (\r\n        <List.Item key={item}>\r\n          <Checkbox\r\n            name={item}\r\n            label={item}\r\n            onChange={(e, d) => serviceChecked(e, d)}\r\n            defaultChecked\r\n          />\r\n        </List.Item>\r\n      );\r\n    } else {\r\n      return (\r\n        <List.Item key={item}>\r\n          <Checkbox\r\n            name={item}\r\n            label={item}\r\n            onChange={(e, d) => serviceChecked(e, d)}\r\n          />\r\n        </List.Item>\r\n      );\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Form onSubmit={e => handleSubmit(e)}>\r\n      <Form.Field>\r\n        <label>Staff Name</label>\r\n        <input\r\n          name=\"staff\"\r\n          required\r\n          placeholder=\"staff\"\r\n          value={formData.staffName}\r\n          onChange={e => handleFormInputData(e)}\r\n        />\r\n      </Form.Field>\r\n\r\n      <Form.Field>\r\n        <label>Work Days</label>\r\n        <List className=\"columnCSSSpread\">{workDayMap}</List>\r\n      </Form.Field>\r\n\r\n      <Form.Field>\r\n        <label>Services</label>\r\n        <List className=\"columnCSSSpread\">{serviceMap}</List>\r\n      </Form.Field>\r\n\r\n      <Container textAlign=\"center\">\r\n        <Button color=\"blue\" onClick={props.ModalClose}>\r\n          Cancel\r\n        </Button>\r\n        <Button positive type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Container>\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst mapStateTopProps = state => {\r\n  return {\r\n    staffSelectDetail: selectStaffSelectDetail(state)[0],\r\n    ServiceStringArray: SelectorServiceStringArray(state)\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = { editStaffFx: editStaff };\r\n\r\nexport default connect(mapStateTopProps, mapDispatchToProps)(StaffForm);\r\n","import React, { useState } from \"react\";\r\nimport { Button, Modal } from \"semantic-ui-react\";\r\nimport StaffEditForm from \"./StaffEditForm\";\r\n\r\nconst StaffModal = () => {\r\n  const [modalOpenStatus, setModalOpenStatus] = useState(false);\r\n\r\n  const ModalClose = () => {\r\n    setModalOpenStatus(false);\r\n  };\r\n  const ModalOpen = () => {\r\n    setModalOpenStatus(true);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      closeIcon\r\n      onClose={ModalClose}\r\n      open={modalOpenStatus}\r\n      trigger={\r\n        <Button\r\n          size=\"small\"\r\n          icon=\"edit outline\"\r\n          onClick={ModalOpen}\r\n          className=\"pointer\"\r\n          content=\"Edit\"\r\n          compact\r\n          basic\r\n        ></Button>\r\n      }\r\n    >\r\n      <Modal.Header>Add New Appointment</Modal.Header>\r\n      <Modal.Content>\r\n        <Modal.Description>\r\n          <StaffEditForm ModalClose={ModalClose} />\r\n        </Modal.Description>\r\n      </Modal.Content>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default StaffModal;\r\n","import React from \"react\";\r\nimport { Card, List, Grid, Header, Table } from \"semantic-ui-react\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteApt } from \"./../../actions/index\";\r\nimport StaffEditModal from \"./StaffEditModal\";\r\nimport ApptEditModal from \"./../Appt/ApptEditModal\";\r\nimport selectApptStringToLuxonDT from \"../../selectors/selectApptStringToLuxonDT\";\r\nimport selectApptSortedDateTimeASC from \"../../selectors/selectApptSortedDateTimeASC\";\r\nimport selectApptFutureDatesFromNow from \"../../selectors/selectApptFutureDatesFromNow\";\r\nimport { DateTime } from \"luxon\";\r\n\r\nconst StaffDetail = props => {\r\n  const apptMap = props.StaffSelectAppt.map((item, index) => {\r\n    return (\r\n      <Table.Row key={index}>\r\n        <Table.Cell>\r\n          {item.date.toLocaleString({ month: \"numeric\", day: \"numeric\" })}\r\n        </Table.Cell>\r\n        <Table.Cell>\r\n          {item.time.toLocaleString(DateTime.TIME_SIMPLE)}\r\n        </Table.Cell>\r\n        {/* <Table.Cell>{item.staff} </Table.Cell> */}\r\n        <Table.Cell>{item.service}</Table.Cell>\r\n        <Table.Cell>{item.customer}</Table.Cell>\r\n        <Table.Cell>{item.phone}</Table.Cell>\r\n        <Table.Cell\r\n          textAlign=\"center\"\r\n          icon=\"delete\"\r\n          className=\"pointer p-0\"\r\n          onClick={() => props.deleteAptFx(item.id)}\r\n        />\r\n        <Table.Cell textAlign=\"center\" className=\"pointer p-0\">\r\n          <ApptEditModal itemId={item.id} />\r\n        </Table.Cell>\r\n      </Table.Row>\r\n    );\r\n  });\r\n\r\n  const scheduleMap = props.staffSelectDetail.workDay.map(item => (\r\n    <List.Item key={item}>{item}</List.Item>\r\n  ));\r\n\r\n  const serviceMap = props.staffSelectDetail.service.map(item => (\r\n    <List.Item key={item}>{item}</List.Item>\r\n  ));\r\n\r\n  return (\r\n    <>\r\n      <Grid columns=\"equal\">\r\n        <Grid.Row>\r\n          <Grid.Column width={3}>\r\n            <Header as=\"h3\">{props.staffSelectDetail.staffName}</Header>\r\n\r\n            <Card.Description>\r\n              <StaffEditModal />\r\n            </Card.Description>\r\n          </Grid.Column>\r\n\r\n          <Grid.Column width={3}>\r\n            <List>\r\n              <List.Item>\r\n                <List.Header>Workday</List.Header>\r\n              </List.Item>\r\n              {scheduleMap}\r\n            </List>\r\n          </Grid.Column>\r\n\r\n          <Grid.Column width={5}>\r\n            <List>\r\n              <List.Item>\r\n                <List.Header>Services</List.Header>\r\n              </List.Item>\r\n              {serviceMap}\r\n            </List>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n\r\n        <Grid.Row>\r\n          <Grid.Column>\r\n            <Table celled striped selectable>\r\n              <Table.Header>\r\n                <Table.Row>\r\n                  <Table.HeaderCell>Date</Table.HeaderCell>\r\n                  <Table.HeaderCell>Time</Table.HeaderCell>\r\n                  {/* <Table.HeaderCell>Staff</Table.HeaderCell> */}\r\n                  <Table.HeaderCell>Service</Table.HeaderCell>\r\n                  <Table.HeaderCell>Customer</Table.HeaderCell>\r\n                  <Table.HeaderCell>Phone</Table.HeaderCell>\r\n                  <Table.HeaderCell textAlign=\"center\" width={1}>\r\n                    Delete\r\n                  </Table.HeaderCell>\r\n                  <Table.HeaderCell textAlign=\"center\" width={1}>\r\n                    Edit\r\n                  </Table.HeaderCell>\r\n                </Table.Row>\r\n              </Table.Header>\r\n\r\n              <Table.Body>{apptMap}</Table.Body>\r\n            </Table>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateTopProps = state => {\r\n  const selectedStaff = state.staff.staffSelect;\r\n  const stringToLuxonDT = selectApptStringToLuxonDT(state);\r\n\r\n  const sortedByDatesASC = selectApptSortedDateTimeASC(stringToLuxonDT);\r\n  const futureDateFromNow = selectApptFutureDatesFromNow(sortedByDatesASC);\r\n\r\n  const StaffSelectAppt = () => {\r\n    console.log(\"getStaffSelectAppt\");\r\n    return futureDateFromNow.filter(item => item.staff === selectedStaff);\r\n  };\r\n\r\n  //****testing\r\n  console.log(\"selectedStaff\", selectedStaff);\r\n  //****testing\r\n  console.log(\"futureDateFromNow\", futureDateFromNow);\r\n  //****testing\r\n  console.log(\"StaffSelectAppt\", StaffSelectAppt());\r\n  return {\r\n    StaffSelectAppt: StaffSelectAppt(),\r\n    selectedStaff: selectedStaff\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  deleteAptFx: deleteApt\r\n};\r\n\r\nexport default connect(mapStateTopProps, mapDispatchToProps)(StaffDetail);\r\n","import React, { useState } from \"react\";\r\nimport { Button, Checkbox, Form, Container, List } from \"semantic-ui-react\";\r\nimport { connect } from \"react-redux\";\r\nimport uid from \"uid\";\r\nimport { addStaff } from \"../../actions/index\";\r\n\r\nconst StaffForm = props => {\r\n  const [formData, setFormData] = useState({\r\n    staffName: \"\",\r\n    workDay: [],\r\n    service: [],\r\n    staffId: uid()\r\n  });\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    props.ModalClose();\r\n    props.addStaffFx(formData);\r\n  };\r\n\r\n  const handleFormInputData = e => {\r\n    setFormData({\r\n      ...formData,\r\n      staffName: e.target.value\r\n    });\r\n  };\r\n\r\n  const workDayChecked = (e, d) => {\r\n    if (d.checked) {\r\n      setFormData({ ...formData, workDay: [...formData.workDay, d.name] });\r\n    } else {\r\n      setFormData({\r\n        ...formData,\r\n        workDay: formData.workDay.filter(item => item !== d.name)\r\n      });\r\n    }\r\n  };\r\n\r\n  const WorkDayStringArray = [\r\n    \"Monday\",\r\n    \"Tuesday\",\r\n    \"Wednesday\",\r\n    \"Thursday\",\r\n    \"Friday\",\r\n    \"Saturday\"\r\n  ];\r\n\r\n  const workDayMap = WorkDayStringArray.map(item => {\r\n    return (\r\n      <List.Item key={item}>\r\n        <Checkbox\r\n          name={item}\r\n          label={item}\r\n          onChange={(e, d) => workDayChecked(e, d)}\r\n        />\r\n      </List.Item>\r\n    );\r\n  });\r\n\r\n  const serviceChecked = (e, d) => {\r\n    if (d.checked) {\r\n      setFormData({ ...formData, service: [...formData.service, d.name] });\r\n    } else {\r\n      setFormData({\r\n        ...formData,\r\n        service: formData.service.filter(item => item !== d.name)\r\n      });\r\n    }\r\n  };\r\n\r\n  const serviceArrayEntries = Object.entries(props.service);\r\n\r\n  let ServiceStringArray = [];\r\n\r\n  for (let item of serviceArrayEntries) {\r\n    ServiceStringArray = [...ServiceStringArray, ...item[1]];\r\n  }\r\n\r\n  const serviceMap = ServiceStringArray.map(item => {\r\n    return (\r\n      <List.Item key={item}>\r\n        <Checkbox\r\n          name={item}\r\n          label={item}\r\n          onChange={(e, d) => serviceChecked(e, d)}\r\n        />\r\n      </List.Item>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Form onSubmit={e => handleSubmit(e)}>\r\n      <Form.Field>\r\n        <label>Staff Name</label>\r\n        <input\r\n          name=\"staff\"\r\n          required\r\n          placeholder=\"staff\"\r\n          value={formData.staffName}\r\n          onChange={e => handleFormInputData(e)}\r\n        />\r\n      </Form.Field>\r\n\r\n      <Form.Field>\r\n        <label>Work Days</label>\r\n        <List className=\"columnCSSSpread\">{workDayMap}</List>\r\n      </Form.Field>\r\n\r\n      <Form.Field>\r\n        <label>Services</label>\r\n        <List className=\"columnCSSSpread\">{serviceMap}</List>\r\n      </Form.Field>\r\n\r\n      <Container textAlign=\"center\">\r\n        <Button color=\"blue\" onClick={props.ModalClose}>\r\n          Cancel\r\n        </Button>\r\n        <Button positive type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Container>\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst mapStateTopProps = state => {\r\n  return {\r\n    staff: state.staff.list,\r\n    service: state.service\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = { addStaffFx: addStaff };\r\n\r\nexport default connect(mapStateTopProps, mapDispatchToProps)(StaffForm);\r\n","import React, { useState } from \"react\";\r\nimport { Button, Modal } from \"semantic-ui-react\";\r\nimport StaffAddForm from \"./StaffAddForm\";\r\nconst style = {\r\n  Button: {\r\n    borderRight: \"1px solid rgba(34,36,38,.15)\",\r\n    width: 120,\r\n    padding: 7,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\"\r\n  }\r\n};\r\n\r\nconst StaffAddModal = props => {\r\n  const [modalOpenStatus, setModalOpenStatus] = useState(false);\r\n\r\n  const ModalClose = () => {\r\n    setModalOpenStatus(false);\r\n  };\r\n  const ModalOpen = () => {\r\n    setModalOpenStatus(true);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      closeIcon\r\n      onClose={ModalClose}\r\n      open={modalOpenStatus}\r\n      trigger={\r\n        <Button\r\n          style={style.Button}\r\n          content=\"Add Staff\"\r\n          basic\r\n          primary\r\n          icon=\"plus\"\r\n          // size=\"mini\"\r\n          onClick={ModalOpen}\r\n        />\r\n      }\r\n    >\r\n      <Modal.Header>Add New Appointment</Modal.Header>\r\n      <Modal.Content>\r\n        <Modal.Description>\r\n          <StaffAddForm ModalClose={ModalClose} />\r\n        </Modal.Description>\r\n      </Modal.Content>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default StaffAddModal;\r\n","import React from \"react\";\r\n// import StaffList from \"./StaffList\";\r\nimport { List, Icon } from \"semantic-ui-react\";\r\n// import Faker from \"faker\";\r\nimport { connect } from \"react-redux\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport { staffSelected } from \"../../actions/index\";\r\nimport StaffDetail from \"./StaffDetail\";\r\nimport StaffAddModal from \"./StaffAddModal\";\r\nimport selectStaffSelectDetail from \"../../selectors/selectStaffSelectDetail\";\r\n\r\nconst style = {\r\n  container: { paddingTop: 20, paddingLeft: 10, paddingRight: 10 }\r\n};\r\n\r\nconst Staff = props => {\r\n  const activeItem = props.staffSelect;\r\n\r\n  const staffMap = props.staff.map((item, index) => {\r\n    return (\r\n      <List.Item\r\n        key={item.staffName + index}\r\n        active={activeItem === item.staffName}\r\n        onClick={() => props.staffSelectedFx(item.staffName)}\r\n      >\r\n        <Icon name=\"user outline\" />\r\n        <List.Content>\r\n          <List.Header>{item.staffName}</List.Header>\r\n        </List.Content>\r\n      </List.Item>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Grid columns=\"equal\" stackable style={style.container}>\r\n        <Grid.Row>\r\n          <Grid.Column\r\n            mobile={6}\r\n            tablet={4}\r\n            computer={3}\r\n            largeScreen={2}\r\n            widescreen={2}\r\n          >\r\n            <List\r\n              link\r\n              selection\r\n              verticalAlign=\"middle\"\r\n              size=\"large\"\r\n              relaxed=\"very\"\r\n            >\r\n              {staffMap}\r\n              <div className=\"m-20\">\r\n                <StaffAddModal />\r\n              </div>\r\n            </List>\r\n          </Grid.Column>\r\n          <Grid.Column>\r\n            <StaffDetail staffSelectDetail={props.staffSelectDetail} />\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateTopProps = state => {\r\n  return {\r\n    staffSelect: state.staff.staffSelect,\r\n\r\n    staff: state.staff.list,\r\n\r\n    staffSelectDetail: selectStaffSelectDetail(state)[0]\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = { staffSelectedFx: staffSelected };\r\n\r\nexport default connect(mapStateTopProps, mapDispatchToProps)(Staff);\r\n","import React, { useState } from \"react\";\r\nimport { Button, Form, Container, Dropdown } from \"semantic-ui-react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addService } from \"../../actions/index\";\r\n\r\nconst ServiceAddForm = props => {\r\n  const [formData, setFormData] = useState({\r\n    serviceName: \"\",\r\n    categoryName: \"\"\r\n  });\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    props.ModalClose();\r\n    props.addServiceFx(formData);\r\n  };\r\n\r\n  const handleFormInputData = e => {\r\n    setFormData({\r\n      ...formData,\r\n      serviceName: e.target.value\r\n    });\r\n  };\r\n\r\n  const handleDropDownDataService = result => {\r\n    setFormData({\r\n      ...formData,\r\n      categoryName: result\r\n    });\r\n  };\r\n\r\n  const categoryOption = Object.keys(props.service).map(item => {\r\n\r\n    return {\r\n      key: item,\r\n      text: item,\r\n      value: item\r\n    };\r\n  });\r\n\r\n  //****testing\r\n  console.log(\"formData\", formData);\r\n\r\n  return (\r\n    <Form onSubmit={e => handleSubmit(e)}>\r\n      <Form.Field>\r\n        <label>Service Name</label>\r\n        <input\r\n          name=\"serviceName\"\r\n          required\r\n          placeholder=\"service name\"\r\n          value={formData.serviceName}\r\n          onChange={e => handleFormInputData(e)}\r\n        />\r\n      </Form.Field>\r\n      <Form.Field>\r\n        <label>Category</label>\r\n        <Dropdown\r\n          placeholder=\"Select Category\"\r\n          fluid\r\n          search\r\n          selection\r\n          value={formData.staff}\r\n          options={categoryOption}\r\n          onChange={(e, result) => handleDropDownDataService(result.value)}\r\n        />\r\n      </Form.Field>\r\n\r\n      <Container textAlign=\"center\">\r\n        <Button color=\"blue\" onClick={props.ModalClose}>\r\n          Cancel\r\n        </Button>\r\n        <Button positive type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Container>\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst mapStateTopProps = state => {\r\n  //****testing\r\n  console.log(\"state.service\", state.service);\r\n  return {\r\n    service: state.service\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  addServiceFx: addService\r\n};\r\n\r\nexport default connect(mapStateTopProps, mapDispatchToProps)(ServiceAddForm);\r\n","import React, { useState } from \"react\";\r\nimport { Button, Modal } from \"semantic-ui-react\";\r\nimport ServiceAddForm from \"./ServiceAddForm\";\r\n\r\nconst style = {\r\n  Button: {\r\n    borderRight: \"1px solid rgba(34,36,38,.15)\",\r\n    width: 120,\r\n    padding: 7,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\"\r\n  }\r\n};\r\n\r\nconst StaffModal = props => {\r\n  const [modalOpenStatus, setModalOpenStatus] = useState(false);\r\n\r\n  const ModalClose = () => {\r\n    setModalOpenStatus(false);\r\n  };\r\n  const ModalOpen = () => {\r\n    setModalOpenStatus(true);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      closeIcon\r\n      onClose={ModalClose}\r\n      open={modalOpenStatus}\r\n      trigger={\r\n        <Button\r\n          style={style.Button}\r\n          content=\"Add Service\"\r\n          basic\r\n          primary\r\n          icon=\"plus\"\r\n          onClick={ModalOpen}\r\n        />\r\n      }\r\n    >\r\n      <Modal.Header>Add New Service</Modal.Header>\r\n      <Modal.Content>\r\n        <Modal.Description>\r\n          <ServiceAddForm ModalClose={ModalClose} />\r\n        </Modal.Description>\r\n      </Modal.Content>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default StaffModal;\r\n","import { createSelector } from \"reselect\";\r\n\r\nconst serviceDataSelector = state => state.service;\r\n\r\nconst getServiceDataEntries = state => {\r\n  console.log(\"getServiceDataEntries\");\r\n  return Object.entries(state);\r\n};\r\n\r\nexport default createSelector(serviceDataSelector, getServiceDataEntries);\r\n","import React, { Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { List, Grid } from \"semantic-ui-react\";\r\nimport ServiceAddModal from \"./ServiceAddModal\";\r\nimport selectServiceEntries from \"../../selectors/selectServiceEntries\";\r\n\r\nconst style = {\r\n  container: {\r\n    paddingTop: 30,\r\n    paddingLeft: 20,\r\n    paddingRight: 20,\r\n    paddingBottom: 20,\r\n    maxWidth: 400\r\n  }\r\n};\r\n\r\nconst Service = props => {\r\n  const serviceMap = props.serviceData.map((item, index) => {\r\n    return (\r\n      <Fragment key={item + index}>\r\n        <h4>{item[0]}</h4>\r\n        <List className=\"columnCSSSpread\">\r\n          {item[1].map((item2, index) => {\r\n            return (\r\n              <List.Item key={item + index}>\r\n                <List.Content>{item2}</List.Content>\r\n              </List.Item>\r\n            );\r\n          })}\r\n        </List>\r\n      </Fragment>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Grid columns=\"equal\" stackable style={style.container}>\r\n      <Grid.Row>\r\n        <Grid.Column>{serviceMap}</Grid.Column>\r\n      </Grid.Row>\r\n      <ServiceAddModal />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    serviceData: selectServiceEntries(state)\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Service);\r\n","import React, { useState } from \"react\";\r\nimport { Button, Form, Container } from \"semantic-ui-react\";\r\nimport { connect } from \"react-redux\";\r\nimport { editUser } from \"../../actions/index\";\r\n\r\nconst SettingEditForm = props => {\r\n  const [formData, setFormData] = useState({\r\n    id: 1,\r\n    firstName: props.userData.firstName,\r\n    lastName: props.userData.lastName,\r\n    email: props.userData.email,\r\n    address: props.userData.address,\r\n    description: props.userData.description\r\n  });\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    props.ModalClose();\r\n    props.editUserFx(formData);\r\n  };\r\n\r\n  const handleFormInputData = e => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  //****testing\r\n  console.log(\"userData\", props.userData);\r\n  console.log(\"formData\", formData);\r\n  return (\r\n    <Form onSubmit={e => handleSubmit(e)}>\r\n      <Form.Field>\r\n        <label>First Name</label>\r\n        <input\r\n          name=\"firstName\"\r\n          required\r\n          placeholder=\"First Name\"\r\n          value={formData.firstName}\r\n          onChange={e => handleFormInputData(e)}\r\n        />\r\n      </Form.Field>\r\n      <Form.Field>\r\n        <label>Last Name</label>\r\n        <input\r\n          name=\"lastName\"\r\n          required\r\n          placeholder=\"Last Name\"\r\n          value={formData.lastName}\r\n          onChange={e => handleFormInputData(e)}\r\n        />\r\n      </Form.Field>\r\n      <Form.Field>\r\n        <label>Email</label>\r\n        <input\r\n          name=\"email\"\r\n          required\r\n          placeholder=\"Email\"\r\n          value={formData.email}\r\n          onChange={e => handleFormInputData(e)}\r\n        />\r\n      </Form.Field>\r\n\r\n      <Form.Field>\r\n        <label>Address</label>\r\n        <input\r\n          name=\"address\"\r\n          required\r\n          placeholder=\"Address\"\r\n          value={formData.address}\r\n          onChange={e => handleFormInputData(e)}\r\n        />\r\n      </Form.Field>\r\n\r\n      <Form.Field>\r\n        <label>Description</label>\r\n\r\n        <textarea\r\n          name=\"description\"\r\n          required\r\n          placeholder=\"Description\"\r\n          value={formData.description}\r\n          onChange={e => handleFormInputData(e)}\r\n          rows={3}\r\n        />\r\n      </Form.Field>\r\n\r\n      <Container textAlign=\"center\">\r\n        <Button color=\"blue\" onClick={props.ModalClose}>\r\n          Cancel\r\n        </Button>\r\n        <Button positive type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Container>\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst mapStateTopProps = (state, ownProps) => {\r\n  return {\r\n    // itemData: itemData[0],\r\n    // staff: state.staff.list,\r\n    // ServiceStringArray: selectorServiceStringArray(state)\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  editUserFx: editUser\r\n};\r\n\r\nexport default connect(mapStateTopProps, mapDispatchToProps)(SettingEditForm);\r\n","import React, { useState } from \"react\";\r\nimport { Button, Modal } from \"semantic-ui-react\";\r\n// import AddForm from \"./ApptAddForm\";\r\nimport SettingEditForm from \"./SettingsEditForm\";\r\nconst addModal = {\r\n  Button: {\r\n    borderRight: \"1px solid rgba(34,36,38,.15)\",\r\n    width: 120,\r\n    padding: 7,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\"\r\n  }\r\n};\r\n\r\nconst AddModal = props => {\r\n  const [modalOpenStatus, setModalOpenStatus] = useState(false);\r\n\r\n  const ModalClose = () => {\r\n    setModalOpenStatus(false);\r\n  };\r\n  const ModalOpen = () => {\r\n    setModalOpenStatus(true);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      closeIcon\r\n      onClose={ModalClose}\r\n      open={modalOpenStatus}\r\n      trigger={\r\n        <Button\r\n          style={addModal.Button}\r\n          content=\"EDIT USER\"\r\n          basic\r\n          primary\r\n          icon=\"plus\"\r\n          size=\"small\"\r\n          onClick={ModalOpen}\r\n        />\r\n      }\r\n    >\r\n      <Modal.Header>EDIT USER</Modal.Header>\r\n      <Modal.Content>\r\n        <Modal.Description>\r\n          <SettingEditForm userData={props.userData} ModalClose={ModalClose} />\r\n        </Modal.Description>\r\n      </Modal.Content>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddModal;\r\n","import React from \"react\";\r\nimport { Grid, Icon, List, Checkbox } from \"semantic-ui-react\";\r\nimport SettingsEditModal from \"./SettingsEditModal\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst settings = {\r\n  Container: {\r\n    align: \"left\",\r\n    margin: 10\r\n  },\r\n  checkbox: { padding: 5 },\r\n  Header: {\r\n    marginBottom: 0\r\n  }\r\n};\r\n\r\nconst Settings = props => {\r\n  return (\r\n    <>\r\n      <Grid columns={12} style={settings.Container} stackable>\r\n        <Grid.Row>\r\n          <Grid.Column width={3}>\r\n            <Icon name=\"user\" size=\"massive\" />\r\n          </Grid.Column>\r\n          <Grid.Column width={5}>\r\n            <List>\r\n              <List.Item>\r\n                <List.Content>\r\n                  <List.Header as=\"h3\">\r\n                    {props.user.firstName} {props.user.lastName}\r\n                  </List.Header>\r\n                  <List.Description> {props.user.email}</List.Description>\r\n                </List.Content>\r\n              </List.Item>\r\n\r\n              <List.Item>\r\n                <List.Content>\r\n                  <List.Header>Status</List.Header>\r\n                  <List.Description> {props.user.role}</List.Description>\r\n                  <List.Description> {props.user.joinDate}</List.Description>\r\n                </List.Content>\r\n              </List.Item>\r\n\r\n              <List.Item>\r\n                <List.Content>\r\n                  <List.Header>Address</List.Header>\r\n\r\n                  <List.Description> {props.user.address}</List.Description>\r\n                </List.Content>\r\n              </List.Item>\r\n            </List>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <Grid.Column width={6} textAlign=\"left\">\r\n            <List>\r\n              <List.Item>\r\n                <List.Content>\r\n                  <List.Header>Description</List.Header>\r\n\r\n                  <List.Description>{props.user.description}</List.Description>\r\n                </List.Content>\r\n              </List.Item>\r\n            </List>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <Grid.Column width={4} textAlign=\"left\">\r\n            <List>\r\n              <List.Item>\r\n                <List.Content style={settings.checkbox}>\r\n                  <List.Header>Email Subscription</List.Header>\r\n                  <List.Description>\r\n                    <Checkbox toggle id=\"emailSub\" />\r\n                  </List.Description>\r\n                </List.Content>\r\n              </List.Item>\r\n              <List.Item>\r\n                <List.Content style={settings.checkbox}>\r\n                  <List.Header>Text Notification</List.Header>\r\n                  <List.Description>\r\n                    <Checkbox toggle />\r\n                  </List.Description>\r\n                </List.Content>\r\n              </List.Item>\r\n              <List.Item>\r\n                <List.Content style={settings.checkbox}>\r\n                  <List.Header>Visibility</List.Header>\r\n                  <List.Description>\r\n                    <Checkbox toggle />\r\n                  </List.Description>\r\n                </List.Content>\r\n              </List.Item>\r\n            </List>\r\n          </Grid.Column>\r\n          <Grid.Column width={4} textAlign=\"left\">\r\n            <List>\r\n              <List.Item>\r\n                <List.Content style={settings.checkbox}>\r\n                  <List.Header>Auto Save</List.Header>\r\n                  <List.Description>\r\n                    <Checkbox toggle />\r\n                  </List.Description>\r\n                </List.Content>\r\n              </List.Item>\r\n              <List.Item>\r\n                <List.Content style={settings.checkbox}>\r\n                  <List.Header>Auto Email Reply</List.Header>\r\n                  <List.Description>\r\n                    <Checkbox toggle />\r\n                  </List.Description>\r\n                </List.Content>\r\n              </List.Item>\r\n              <List.Item>\r\n                <List.Content style={settings.checkbox}>\r\n                  <List.Header>Vacation Status</List.Header>\r\n                  <List.Description>\r\n                    <Checkbox toggle />\r\n                  </List.Description>\r\n                </List.Content>\r\n              </List.Item>\r\n            </List>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n\r\n        <Grid.Row>\r\n          <Grid.Column width={3} textAlign=\"center\">\r\n            <SettingsEditModal userData={props.user} />\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.user[0]\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings);\r\n","import React from \"react\";\nimport DashBoard from \"./DashBoard/DashBoard\";\nimport Nav from \"./Nav/Nav\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport ScrollToTop from \"./Other/ScrollToTop\";\nimport Staff from \"./Staff/Staff\";\nimport Service from \"./Service/Service\";\nimport Settings from \"./Settings/Settings\";\n\nconst appStyle = {\n  container: {\n    marginLeft: 90\n  }\n};\n\nfunction App() {\n  return (\n    <>\n      <Router>\n        <Nav />\n        <div style={appStyle.container}>\n          <ScrollToTop>\n            <Switch>\n              <Route\n                exact\n                path=\"/\"\n                render={props => <DashBoard {...props} />}\n              />\n              <Route\n                exact\n                path=\"/staff\"\n                render={props => <Staff {...props} />}\n              />\n              <Route\n                exact\n                path=\"/service\"\n                render={props => <Service {...props} />}\n              />\n              <Route\n                exact\n                path=\"/settings\"\n                render={props => <Settings {...props} />}\n              />\n            </Switch>\n          </ScrollToTop>\n        </div>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { NAVBAR_SELECT } from \"../actions/types\";\r\n\r\nconst INITIAL_STATE = {\r\n  navBarSelect: \"dashboard\"\r\n};\r\n\r\nexport default (state = INITIAL_STATE, { type, payload }) => {\r\n  switch (type) {\r\n    case NAVBAR_SELECT:\r\n      return { ...state, navBarSelect: payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { DELETE_APT, SUBMIT_APT, EDIT_APT } from \"../actions/types\";\r\n\r\nconst initialState = [\r\n  {\r\n    id: 1,\r\n    time: \"02:30 PM\",\r\n    staff: \"Tom\",\r\n    service: \"gel refill\",\r\n    customer: \"10\",\r\n    phone: \"813-817-4375\",\r\n    date: \"12-19-2019\"\r\n  },\r\n  {\r\n    id: 2,\r\n    time: \"03:30 PM\",\r\n    staff: \"Kim\",\r\n    service: \"Pedicure\",\r\n    customer: \"15\",\r\n    phone: \"813-817-4375\",\r\n    date: \"12-22-2019\"\r\n  },\r\n  {\r\n    id: 3,\r\n    time: \"01:30 PM\",\r\n    staff: \"James\",\r\n    service: \"Full Set\",\r\n    customer: \"20\",\r\n    phone: \"813-817-4375\",\r\n    date: \"12-19-2019\"\r\n  },\r\n  {\r\n    id: 4,\r\n    time: \"02:30 PM\",\r\n    staff: \"Tom\",\r\n    service: \"Full Set\",\r\n    customer: \"25\",\r\n    phone: \"813-817-4375\",\r\n    date: \"12-30-2019\"\r\n  },\r\n  {\r\n    id: 5,\r\n    time: \"06:30 PM\",\r\n    staff: \"James\",\r\n    service: \"Full Set\",\r\n    customer: \"30\",\r\n    phone: \"813-817-4375\",\r\n    date: \"12-25-2019\"\r\n  },\r\n  {\r\n    id: 6,\r\n    time: \"02:30 PM\",\r\n    staff: \"Tom\",\r\n    service: \"gel refill\",\r\n    customer: \"10\",\r\n    phone: \"813-817-4375\",\r\n    date: \"12-19-2019\"\r\n  },\r\n  {\r\n    id: 7,\r\n    time: \"12:30 PM\",\r\n    staff: \"Kim\",\r\n    service: \"Pedicure\",\r\n    customer: \"15\",\r\n    phone: \"813-817-4375\",\r\n    date: \"01-02-2019\"\r\n  },\r\n  {\r\n    id: 8,\r\n    time: \"08:30 PM\",\r\n    staff: \"James\",\r\n    service: \"Full Set\",\r\n    customer: \"20\",\r\n    phone: \"813-817-4375\",\r\n    date: \"01-19-2019\"\r\n  },\r\n  {\r\n    id: 9,\r\n    time: \"06:30 PM\",\r\n    staff: \"James\",\r\n    service: \"Full Set\",\r\n    customer: \"25\",\r\n    phone: \"813-817-4375\",\r\n    date: \"12-27-2019\"\r\n  },\r\n  {\r\n    id: 10,\r\n    time: \"03:30 PM\",\r\n    staff: \"Grace\",\r\n    service: \"Full Set\",\r\n    customer: \"30\",\r\n    phone: \"813-817-4375\",\r\n    date: \"12-31-2019\"\r\n  }\r\n];\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case DELETE_APT:\r\n      return state.filter(item => item.id !== payload);\r\n    case SUBMIT_APT:\r\n      return [...state, ...payload];\r\n    case EDIT_APT:\r\n      const editRemoved = state.filter(item => item.id !== payload.id);\r\n      return [...editRemoved, payload];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { ADD_STAFF, STAFF_SELECT, EDIT_STAFF } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  list: [\r\n    {\r\n      staffName: \"Kim\",\r\n      workDay: [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\"],\r\n      service: [\"Full Set\", \"Pedicure\"],\r\n      staffId: 1\r\n    },\r\n    {\r\n      staffName: \"Tom\",\r\n      workDay: [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\"],\r\n      service: [\"Full Set\", \"Pedicure\"],\r\n      staffId: 2\r\n    },\r\n    {\r\n      staffName: \"James\",\r\n      workDay: [\"Monday\", \"Tuesday\", \"Wednesday\", \"Friday\"],\r\n      service: [\"Full Set\", \"Pedicure\"],\r\n      staffId: 3\r\n    },\r\n    {\r\n      staffName: \"Grace\",\r\n      workDay: [\"Monday\", \"Tuesday\", \"Wednesday\", \"Friday\"],\r\n      service: [\"Full Set\", \"Pedicure\"],\r\n      staffId: 4\r\n    }\r\n  ],\r\n\r\n  staffSelect: \"Kim\"\r\n};\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case STAFF_SELECT:\r\n      return { ...state, staffSelect: payload };\r\n    case ADD_STAFF:\r\n      const AddArray = [...state.list, payload];\r\n      return { ...state, list: AddArray };\r\n    case EDIT_STAFF:\r\n      const editRemoved = state.list.filter(\r\n        item => item.staffId !== payload.staffId\r\n      );\r\n\r\n      const InsertEditedStaff = [...editRemoved, payload];\r\n\r\n      return {\r\n        ...state,\r\n        list: InsertEditedStaff,\r\n        staffSelect: payload.staffName\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { ADD_SERVICE } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  category1: [\"Manicure\", \"Pedicure\"],\r\n  category2: [\"Full Set\", \"refill\", \"gel full set\", \"gel refill\"],\r\n  category3: [\"pink & white\", \"waxing\"]\r\n};\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case ADD_SERVICE:\r\n      const itemArrayAdd = [\r\n        ...state[payload.categoryName],\r\n        payload.serviceName\r\n      ];\r\n      return { ...state, [payload.categoryName]: itemArrayAdd };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { VIEW_DASH } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  view: \"\"\r\n};\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case VIEW_DASH:\r\n      return { ...state, view: payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { EDIT_USER } from \"../actions/types\";\r\n\r\nconst initialState = [\r\n  {\r\n    id: 1,\r\n    firstName: \"John\",\r\n    lastName: \"Smith\",\r\n    email: \"JohnSmith@gmail.com\",\r\n    role: \"Admin\",\r\n    joinDate: \"12-12-2019\",\r\n    address: \"2492 Barnes Avenue Blue Ash, Ohio 45242\",\r\n    description:\r\n      \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Libero, doloribus! Sint quo tempore est laborum sequi, deleniti eius error harum illum, provident temporibus dignissimos doloribus explicabo excepturi odio, nam accusamus?\",\r\n    emailSub: true,\r\n    textNot: true,\r\n    visibility: true,\r\n    autoSave: true,\r\n    autoReply: true,\r\n    vacation: true\r\n  }\r\n];\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case EDIT_USER:\r\n      const editRemoved = state.filter(item => item.id !== payload.id);\r\n      return [...editRemoved, payload];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport navReducer from \"./navReducer\";\r\nimport apptReducer from \"./apptReducer\";\r\nimport staffReducer from \"./staffReducer\";\r\nimport serviceReducer from \"./serviceReducer\";\r\nimport dashReducer from \"./dashReducer\";\r\nimport userReducer from \"./userReducer\";\r\n\r\nexport default combineReducers({\r\n  nav: navReducer,\r\n  appt: apptReducer,\r\n  staff: staffReducer,\r\n  service: serviceReducer,\r\n  dash: dashReducer,\r\n  user: userReducer\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"../src/components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport reducers from \"./reducers\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nReactDOM.render(\n  <Provider\n    store={createStore(reducers, composeWithDevTools(applyMiddleware()))}\n  >\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}